// Package doc GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package doc

import "github.com/swaggo/swag"

const docTemplateAPI = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth/login": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login staff by username and password",
                "parameters": [
                    {
                        "description": "Request payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorValidationResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout staff and invalidate token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "example": "SOMETHING_WENT_WRONG"
                },
                "errorDescription": {
                    "type": "string",
                    "example": "Internal server error"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "dto.ErrorValidationDetail": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string",
                    "example": "id"
                },
                "message": {
                    "type": "string",
                    "example": "Key: 'Member.id' Error:Field validation for 'id' failed on the 'required' tag"
                },
                "tag": {
                    "type": "string",
                    "example": "required"
                }
            }
        },
        "dto.ErrorValidationResponse": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "example": "SOMETHING_WENT_WRONG"
                },
                "errorDescription": {
                    "type": "string",
                    "example": "Internal server error"
                },
                "errorValidation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ErrorValidationDetail"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "username": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "dto.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "Y29weSB0byBjbGlwYm9hcmQuCg=="
                }
            }
        },
        "dto.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "OK"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfoAPI holds exported Swagger Info so clients can modify it
var SwaggerInfoAPI = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "API",
	SwaggerTemplate:  docTemplateAPI,
}

func init() {
	swag.Register(SwaggerInfoAPI.InstanceName(), SwaggerInfoAPI)
}
